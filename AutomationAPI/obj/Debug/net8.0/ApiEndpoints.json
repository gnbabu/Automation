[
  {
    "ContainingType": "AutomationAPI.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "AutomationAPI.Repositories.Models.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "InsertAutomationDataAsync",
    "RelativePath": "api/Automation/data",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AutomationAPI.Repositories.Models.AutomationDataRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "UpdateAutomationDataAsync",
    "RelativePath": "api/Automation/data",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AutomationAPI.Repositories.Models.AutomationDataRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "GetAutomationDataAsync",
    "RelativePath": "api/Automation/data/{sectionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sectionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "DeleteAutomationDataAsync",
    "RelativePath": "api/Automation/data/{sectionId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sectionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "GetAutomationDataByFlowNameAsync",
    "RelativePath": "api/Automation/data/flow/{flowName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flowName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "GetAutomationFlowNamesAsync",
    "RelativePath": "api/Automation/flows",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "InsertAutomationDataSectionAsync",
    "RelativePath": "api/Automation/sections",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AutomationAPI.Repositories.Models.AutomationDataSectionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "UpdateAutomationDataSectionAsync",
    "RelativePath": "api/Automation/sections",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AutomationAPI.Repositories.Models.AutomationDataSectionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "GetAutomationDataSectionsAsync",
    "RelativePath": "api/Automation/sections/{flowName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flowName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.AutomationController",
    "Method": "DeleteAutomationDataSectionAsync",
    "RelativePath": "api/Automation/sections/{sectionId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sectionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.QueueController",
    "Method": "GetQueues",
    "RelativePath": "api/Queue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queueId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "queueStatus",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.QueueController",
    "Method": "InsertQueue",
    "RelativePath": "api/Queue",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queue",
        "Type": "AutomationAPI.Repositories.Models.QueueInfo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.QueueController",
    "Method": "GetQueueById",
    "RelativePath": "api/Queue/{queueId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queueId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.QueueController",
    "Method": "UpdateQueueStatus",
    "RelativePath": "api/Queue/{queueId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queueId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "queueStatus",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.QueueController",
    "Method": "DeleteQueue",
    "RelativePath": "api/Queue/{queueId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queueId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.QueueController",
    "Method": "GetAllQueues",
    "RelativePath": "api/Queue/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.TestResultsController",
    "Method": "InsertTestResultsAsync",
    "RelativePath": "api/TestResults",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "testResult",
        "Type": "AutomationAPI.Repositories.Models.TestResult",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AutomationAPI.Controllers.TestResultsController",
    "Method": "GetTestResultsByQueueIdAsync",
    "RelativePath": "api/TestResults/{queueId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queueId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AutomationAPI.Repositories.Models.TestResult, AutomationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AutomationAPI.Controllers.TestResultsController",
    "Method": "GetAllTestResultsAsync",
    "RelativePath": "api/TestResults/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AutomationAPI.Repositories.Models.TestResult, AutomationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AutomationAPI.Controllers.TestResultsController",
    "Method": "SearchTestResultsAsync",
    "RelativePath": "api/TestResults/search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "payload",
        "Type": "AutomationAPI.Repositories.Models.TestResultPayload",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AutomationAPI.Repositories.Models.PagedResult\u00601[[AutomationAPI.Repositories.Models.TestResult, AutomationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AutomationAPI.Controllers.TestRunnerController",
    "Method": "RunTestAsync",
    "RelativePath": "api/TestRunner/run-test",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "queue",
        "Type": "AutomationAPI.Repositories.Models.QueueInfo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.TestSuitesController",
    "Method": "GetTestLibraries",
    "RelativePath": "api/TestSuites/libraries",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "CreateUser",
    "RelativePath": "api/Users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "AutomationAPI.Repositories.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "api/Users",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "AutomationAPI.Repositories.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "GetUserById",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "SetUserActiveStatus",
    "RelativePath": "api/Users/activate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AutomationAPI.Repositories.Models.SetActiveStatusRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "ChangePassword",
    "RelativePath": "api/Users/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AutomationAPI.Repositories.Models.ChangePasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "GetUserRoles",
    "RelativePath": "api/Users/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.UsersController",
    "Method": "ValidateUser",
    "RelativePath": "api/Users/validate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginModel",
        "Type": "AutomationAPI.Repositories.Models.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AutomationAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AutomationAPI.WeatherForecast, AutomationAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]